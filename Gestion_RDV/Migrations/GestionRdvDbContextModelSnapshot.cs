// <auto-generated />
using System;
using Gestion_RDV.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gestion_RDV.Migrations
{
    [DbContext(typeof(GestionRdvDbContext))]
    partial class GestionRdvDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Address", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdresseId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adr_adresse");

                    b.Property<int>("CodePostal")
                        .HasColumnType("integer")
                        .HasColumnName("adr_codepostal");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adr_ville");

                    b.HasKey("AdresseId")
                        .HasName("PK_Address");

                    b.ToTable("t_e_address_adr", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Availability", b =>
                {
                    b.Property<int>("AvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AvailabilityId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("avb_end_date");

                    b.Property<int>("OfficeId")
                        .HasColumnType("integer")
                        .HasColumnName("ofc_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("avb_start_date");

                    b.HasKey("AvailabilityId")
                        .HasName("PK_Availability");

                    b.HasIndex("OfficeId");

                    b.ToTable("t_e_availability_avb", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cmt_date");

                    b.Property<int>("ReviewId")
                        .HasColumnType("integer")
                        .HasColumnName("rvw_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cmt_text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.HasKey("CommentId")
                        .HasName("PK_Comment");

                    b.HasIndex("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("t_e_comment_cmt", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Conversation", b =>
                {
                    b.Property<int>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cnv_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConversationId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cnv_name");

                    b.HasKey("ConversationId")
                        .HasName("PK_Conversation");

                    b.ToTable("t_e_conversation_cnv", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.ConversationUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.Property<int>("ConversationId")
                        .HasColumnType("integer")
                        .HasColumnName("cnv_id");

                    b.HasKey("UserId", "ConversationId")
                        .HasName("PK_ConversationUser");

                    b.HasIndex("ConversationId");

                    b.ToTable("t_j_conversationuser_cvu", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Facture", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fct_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FactureId"));

                    b.Property<string>("Informations")
                        .HasColumnType("text")
                        .HasColumnName("fct_infos");

                    b.Property<decimal>("PrixAvantTva")
                        .HasColumnType("numeric")
                        .HasColumnName("fct_prix_avant_tva");

                    b.Property<int>("RendezVousId")
                        .HasColumnType("integer")
                        .HasColumnName("rdv_id");

                    b.Property<decimal>("Tva")
                        .HasColumnType("numeric")
                        .HasColumnName("fct_tva");

                    b.HasKey("FactureId")
                        .HasName("PK_Facture");

                    b.HasIndex("RendezVousId")
                        .IsUnique();

                    b.ToTable("t_e_facture_fct", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.LikePost", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.Property<int>("PostId")
                        .HasColumnType("integer")
                        .HasColumnName("pst_id");

                    b.HasKey("UserId", "PostId")
                        .HasName("PK_LikePost");

                    b.HasIndex("PostId");

                    b.ToTable("t_j_like_post_lke", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.LikeReview", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.Property<int>("ReviewId")
                        .HasColumnType("integer")
                        .HasColumnName("rvw_id");

                    b.Property<bool>("IsLiked")
                        .HasColumnType("boolean")
                        .HasColumnName("lke_liked");

                    b.HasKey("UserId", "ReviewId")
                        .HasName("PK_LikeReview");

                    b.HasIndex("ReviewId");

                    b.ToTable("t_j_like_review_lke", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Message", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.Property<int>("ConversationId")
                        .HasColumnType("integer")
                        .HasColumnName("cnv_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("msg_created");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("msg_text");

                    b.HasKey("UserId", "ConversationId", "Created")
                        .HasName("PK_Message");

                    b.HasIndex("ConversationId");

                    b.ToTable("t_j_message_msg", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ntf_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ntf_date");

                    b.Property<int>("OfficeId")
                        .HasColumnType("integer")
                        .HasColumnName("ofc_id");

                    b.Property<int>("RendezVousId")
                        .HasColumnType("integer")
                        .HasColumnName("rdv_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ntf_title");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.HasKey("NotificationId")
                        .HasName("PK_Notification");

                    b.HasIndex("OfficeId");

                    b.HasIndex("RendezVousId");

                    b.HasIndex("UserId");

                    b.ToTable("t_e_notification_ntf", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Office", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ofc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OfficeId"));

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ofc_cv");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ofc_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ofc_description");

                    b.Property<string>("Diplome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ofc_diplome");

                    b.Property<string>("DomainePrincipal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ofc_domaine_principal");

                    b.Property<string>("ImageDiplome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ofc_image_diplome");

                    b.Property<string>("Metier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ofc_metier");

                    b.Property<double>("PrixPCR")
                        .HasColumnType("double precision")
                        .HasColumnName("ofc_prix_pcr");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ofc_telephone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ofc_video");

                    b.HasKey("OfficeId")
                        .HasName("PK_Office");

                    b.HasIndex("AdresseId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("t_e_office_ofc", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pst_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PostId"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("pst_date")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int?>("ParentPostId")
                        .HasColumnType("integer")
                        .HasColumnName("p_pst_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pst_text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("text")
                        .HasColumnName("pst_type");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.HasKey("PostId")
                        .HasName("PK_t_e_post_pst");

                    b.HasIndex("ParentPostId");

                    b.HasIndex("UserId");

                    b.ToTable("t_e_post_pst", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.RendezVous", b =>
                {
                    b.Property<int>("RendezVousId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rdv_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RendezVousId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rdv_description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("rdv_end_date");

                    b.Property<string>("FichierJoint")
                        .HasColumnType("text")
                        .HasColumnName("rdv_fichier_joint");

                    b.Property<int>("OfficeId")
                        .HasColumnType("integer")
                        .HasColumnName("ofc_id");

                    b.Property<double>("Prix")
                        .HasColumnType("double precision")
                        .HasColumnName("rdv_prix");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("rdv_start_date");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.HasKey("RendezVousId")
                        .HasName("PK_RendezVous");

                    b.HasIndex("OfficeId");

                    b.HasIndex("UserId");

                    b.ToTable("t_e_rendezvous_rdv", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rvw_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReviewId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("rvw_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("rvw_description");

                    b.Property<int>("Note")
                        .HasColumnType("integer")
                        .HasColumnName("rvw_note");

                    b.Property<int>("RendezVousId")
                        .HasColumnType("integer")
                        .HasColumnName("rdv_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("rvw_type");

                    b.HasKey("ReviewId")
                        .HasName("PK_Review");

                    b.HasIndex("RendezVousId")
                        .IsUnique();

                    b.ToTable("t_e_review_rvw", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.SocialMediaAccount", b =>
                {
                    b.Property<int>("SocialMediaAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sma_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SocialMediaAccountId"));

                    b.Property<int>("OfficeId")
                        .HasColumnType("integer")
                        .HasColumnName("ofc_id");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sma_platform");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sma_url");

                    b.HasKey("SocialMediaAccountId")
                        .HasName("PK_SocialMediaAccount");

                    b.HasIndex("OfficeId");

                    b.ToTable("t_e_socialmediaaccount_sma", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Subscription", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    b.Property<int>("OfficeId")
                        .HasColumnType("integer")
                        .HasColumnName("ofc_id");

                    b.HasKey("UserId", "OfficeId")
                        .HasName("PK_Subscription");

                    b.HasIndex("OfficeId");

                    b.ToTable("t_j_subscription_sub", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<bool>("Activated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("usr_activated");

                    b.Property<int?>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text")
                        .HasColumnName("usr_avatar");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("usr_birth_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usr_email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usr_first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usr_last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usr_password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usr_role");

                    b.Property<string>("SecretToken")
                        .HasColumnType("text")
                        .HasColumnName("usr_secret_token");

                    b.Property<string>("Sexe")
                        .HasColumnType("text")
                        .HasColumnName("usr_sexe");

                    b.Property<string>("Telephone")
                        .HasColumnType("text")
                        .HasColumnName("usr_telephone");

                    b.HasKey("UserId")
                        .HasName("PK_User");

                    b.HasIndex("AdresseId");

                    b.ToTable("t_e_user_usr", (string)null);
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Availability", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Office", "Office")
                        .WithMany("Availabilities")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Availability_Office");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Comment", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Review", "Review")
                        .WithMany("Comments")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Comment_Review");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Comment_User");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.ConversationUser", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Conversation", "Conversation")
                        .WithMany("ConversationsUser")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConversationUser_Conversation");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("ConversationsUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConversationUser_User");

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Facture", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.RendezVous", "RendezVous")
                        .WithOne("Facture")
                        .HasForeignKey("Gestion_RDV.Models.EntityFramework.Facture", "RendezVousId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Facture_RendezVous");

                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.LikePost", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Post", "Post")
                        .WithMany("LikesPosts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LikePost_Post");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("LikesPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LikePost_User");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.LikeReview", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Review", "Review")
                        .WithMany("LikesReview")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LikeReview_Review");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("LikesReview")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LikeReview_User");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Message_Conversation");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Message_User");

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Notification", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Office", "Office")
                        .WithMany("Notifications")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Notification_Office");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.RendezVous", "RendezVous")
                        .WithMany("Notifications")
                        .HasForeignKey("RendezVousId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Notification_RendezVous");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Notification_User");

                    b.Navigation("Office");

                    b.Navigation("RendezVous");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Office", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Address", "Adresse")
                        .WithMany("Offices")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Office_Address");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithOne("Office")
                        .HasForeignKey("Gestion_RDV.Models.EntityFramework.Office", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Office_User");

                    b.Navigation("Adresse");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Post", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Post", "ParentPost")
                        .WithMany("ChildPosts")
                        .HasForeignKey("ParentPostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_t_e_post_pst_t_e_post_p_pst_id");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_t_e_post_pst_t_e_user_usr_id");

                    b.Navigation("ParentPost");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.RendezVous", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Office", "Office")
                        .WithMany("RendezVous")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RendezVous_Office");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("RendezVous")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RendezVous_User");

                    b.Navigation("Office");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Review", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.RendezVous", "RendezVous")
                        .WithOne("Review")
                        .HasForeignKey("Gestion_RDV.Models.EntityFramework.Review", "RendezVousId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Review_RendezVous");

                    b.Navigation("RendezVous");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.SocialMediaAccount", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Office", "Office")
                        .WithMany("Socials")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SocialMediaAccount_Office");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Subscription", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Office", "Office")
                        .WithMany("Subscriptions")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Subscription_Office");

                    b.HasOne("Gestion_RDV.Models.EntityFramework.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Subscription_User");

                    b.Navigation("Office");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.User", b =>
                {
                    b.HasOne("Gestion_RDV.Models.EntityFramework.Address", "Adresse")
                        .WithMany("Users")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_User_Address");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Address", b =>
                {
                    b.Navigation("Offices");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Conversation", b =>
                {
                    b.Navigation("ConversationsUser");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Office", b =>
                {
                    b.Navigation("Availabilities");

                    b.Navigation("Notifications");

                    b.Navigation("RendezVous");

                    b.Navigation("Socials");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Post", b =>
                {
                    b.Navigation("ChildPosts");

                    b.Navigation("LikesPosts");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.RendezVous", b =>
                {
                    b.Navigation("Facture");

                    b.Navigation("Notifications");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.Review", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("LikesReview");
                });

            modelBuilder.Entity("Gestion_RDV.Models.EntityFramework.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("ConversationsUser");

                    b.Navigation("LikesPosts");

                    b.Navigation("LikesReview");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("Office")
                        .IsRequired();

                    b.Navigation("Posts");

                    b.Navigation("RendezVous");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
